@startuml Gravitas

enum LEVEL {
    WARNING,
    ERROR,
    INFO,
    DEBUG
}
class Logger {
    -LEVEL niveau
    -string message
    -string fichierLog
    +log(LEVEL niveau, string message) : void
    +log(string message) : void
    +fermer() : void
    +getTimestamp() : string
    +levelToString(LEVEL niveau) : string
}

class Particle {
    -Vecteur pos
    -Vecteur vel
    -float radius
    -Couleur color
    -Shape shape

    +Particle() : Particle
    +set_color(Couleur color) : void
    +render(Renderer window) : void
    +updatePhysics(GravitySource source) : void
}

class GravitySource {
    -Vecteur center
    -float angularSpeed
    -float angle
    -Couleur color
    -Shape shape
    -Texture texture
    -Sprite sprite

    +GravitySource()

    +update(float dt) : void
    +render(Renderer window) : void
    +getters() : objet
    +setters() : void
}

class Spaceship {
    -sf::Vector2f pos
    -sf::Vector2f vel
    -sf::Vector2f pos0
    -sf::CircleShape shape
    -sf::Texture spaceshipTexture
    -sf::Texture spaceshipTextureCrash
    -sf::Sprite sprite
    -std::vector<sf::Vector2f> trail
    -bool active
    -bool hasFailed
    -std::vector<FuelParticle> fuelParticles
    -bool boosting
    -bool spriteLoaded

    +Spaceship() : Spaceship
    +setVelocity(sf::Vector2f velocity) : void
    +updatePhysics() : void
    +render(sf::RenderWindow &window) : void
    +predictTrajectory() : std::vector<sf::Vector2f>
    +boost() : void
    +updateParticles(float dt) : void
    +getters() : objet
    +setters() : void
}

class UIManager {
    -string playerName
    -bool inputActive
    -int selectedIndex

    +UIManager()
    +handleEvent() : void
    +render(sf::RenderWindow window, int page) : void
    +renderMainMenu(sf::RenderWindow window) : void
    +renderLeaderboard(sf::RenderWindow window) : void
    +renderGame(sf::RenderWindow window) : void
    +updateGameInfo(int level, int score) : void
    +getPlayerName() : string
    +getFont() : sf::Font
}

class SoundManager {
    -sf::SoundBuffer launchBuffer
    -sf::SoundBuffer winBuffer
    -sf::SoundBuffer failBuffer
    -sf::Sound launchSound
    -sf::Sound winSound
    -sf::Sound failSound

    +SoundManager()
    +playLaunch() : void
    +playWin() : void
    +playFail() : void
}

class LevelManager {
    -int level
    -List<Level> levels

    +LevelManager()
    +LevelManager(List<Level> levels)
    +nextLevel() : void
    +currentLevel() : Level
}

class Destination {
    -sf::Vector2f pos
    -sf::CircleShape shape
    -int radius

    +Destination() : Destination
    +render() : void
    +checkArrival() : bool
}

' Associations entre les classes
Main --> Particle : utilise
Main --> Spaceship : utilise
Spaceship --> GravitySource : utilise
UIManager --> LevelManager : utilise
Main --> UIManager : utilise
UIManager --> SoundManager : utilise
' Main --> Logger : utilise
LevelManager --> Destination : utilise

class Main {
    +Main() : Main
    +run() : void
}

Logger --> LEVEL : niveau

' OpenGLRenderer "1" *-- "1" Camera3D: contient

@enduml